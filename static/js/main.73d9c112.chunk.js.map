{"version":3,"sources":["Eblock_fact_table.js","calc/calc_plan.js","calc/AvdRegressionModel.js","calc/AbstractRegressionModel.js","calc/find_avd.js","Eblock.js","App.js","index.js"],"names":["TableFact","setEbFact","useState","jE","setJexcel","jexcelDom","HTMLDivElement","jExcelTempDataOptions","tableOverflow","data","columns","type","width","name","title","useEffect","jexcel","ref","dom","onClick","dayjs","extend","customParseFormat","getData","map","row","date","isValid","format","vol_pr","Number","sod_me_pr","value","setData","calcPlan","params","date_start","facts","step","arrRez","dateStart","C","me_calc","grm","meEb","me","counter","skv_otk","skv_otk_deb","vol_pr_nakop_old","gr_t_grm_nakop_old","me_pr_nakop_old","me_final_nakop_old","me_pr_nakop_f_old","me_final_nakop_f_old","k_izvl","r","id","add","days","hours","vol_pr_nakop","jt","gr_t_grm_nakop","me_pr","me_pr_nakop","me_vr","me_final","me_final_nakop","vol_pr_f","sod_me_pr_f","me_pr_f","me_pr_nakop_f","me_vr_f","me_final_f","me_final_nakop_f","k_izvl_f","length","sod_me_vr","_","expParam","v","d","a","Math","exp","k_izvl_razn","koeff_year_um_skv","koeff_year_um_deb","push","AvdRegressionModel","meStart","grmStart","aStart","vStart","dStart","maxEpochPerTrainSession","learningRate","expectedLoss","f","x","tf","mul","inputMax","sub","inputMin","div","rExp","constOne","outputMin","outputMax","optimizerFunction","sgd","initModelVariables","this","variable","constTen","inputRaw","outputRaw","input","arraySync","k_izvl_calc","i","vol","k_izvl_et","dataSync","loss","predictedValue","realValue","square","mean","sqrt","lossVal","trainSession","epochNumber","history","Error","callback","currentTrainSession","POSITIVE_INFINITY","inputTmp","outputTmp","max","output","optimizer","minimize","epoch","dispose","y","modelAvd","ebParam","ebFact","callbackRez","callbackWorkPrc","prepFact","prepareFact","iterations","train","parseInt","then","newAvd","predictAvd","rezArr","Charts","targetRef","useRef","height","size","setSize","useLayoutEffect","current","offsetWidth","offsetHeight","className","LineChart","margin","top","right","left","bottom","XAxis","dataKey","YAxis","label","angle","position","yAxisId","orientation","Tooltip","isAnimationActive","CartesianGrid","strokeDasharray","Line","stroke","dot","ComposedChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","hide","Area","fillOpacity","fill","Eblock","nameEb","paramEb","runPlanRecalc","setRunPlanRecalc","setEbParam","ebPlanFact","setEbPlanFact","prcCalcAvd","setPrcCalcAvd","runFindAvd","findAvd","setRezOfFindAvd","alert","handleInputNumChange","event","target","checked","onUpDown","addVal","val","toFixed","replace","arr","onChange","onBlur","hidden","stop","style","toString","headerHeight","rowHeight","eblockData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ieAmEeA,EA5DG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACXC,mBAAS,MADE,mBAC5BC,EAD4B,KACxBC,EADwB,KAE/BC,EAAYC,eAGVC,EAAwB,CAC1BC,eAAc,EACdC,KAAK,CACC,CAAC,aAAa,KAAK,GAAG,CAAC,aAAa,KAAK,GAAG,CAAC,aAAa,KAAK,GAAG,CAAC,aAAa,KAAK,GAAG,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,IAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KA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","file":"static/js/main.73d9c112.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\nimport \"../node_modules/jexcel/dist/jexcel.css\";\nimport jexcel from 'jexcel'\n\nconst TableFact = ({ setEbFact }) => {\n  const [jE, setJexcel] = useState(null);\n  let jexcelDom = HTMLDivElement;\n\n  // synthetic test data for demonstration\n  const jExcelTempDataOptions = {\n      tableOverflow:true,\n      data:[\n            [\"2021-01-29\",2160,0],[\"2021-01-30\",2159,0],[\"2021-01-31\",2159,0],[\"2021-02-01\",2158,5],[\"2021-02-02\",2157,24],[\"2021-02-03\",2156,60],[\"2021-02-04\",2156,111],[\"2021-02-05\",2155,167],[\"2021-02-06\",2154,221],[\"2021-02-07\",2154,271],[\"2021-02-08\",2153,313],[\"2021-02-09\",2152,346],[\"2021-02-10\",2151,372],[\"2021-02-11\",2151,392],[\"2021-02-12\",2150,406],[\"2021-02-13\",2149,415],[\"2021-02-14\",2149,420],[\"2021-02-15\",2148,422],[\"2021-02-16\",2147,421],[\"2021-02-17\",2147,420],[\"2021-02-18\",2146,416],[\"2021-02-19\",2145,411],[\"2021-02-20\",2144,406],[\"2021-02-21\",2144,400],[\"2021-02-22\",2143,393],[\"2021-02-23\",2142,387],[\"2021-02-24\",2142,380],[\"2021-02-25\",2141,374],[\"2021-02-26\",2140,367],[\"2021-02-27\",2140,360],[\"2021-02-28\",2139,354],[\"2021-03-01\",2138,348],[\"2021-03-02\",2137,341],[\"2021-03-03\",2137,336],[\"2021-03-04\",2136,330],[\"2021-03-05\",2135,324],[\"2021-03-06\",2135,319],[\"2021-03-07\",2134,314],[\"2021-03-08\",2133,309],[\"2021-03-09\",2132,305],[\"2021-03-10\",2132,300],[\"2021-03-11\",2131,296],[\"2021-03-12\",2130,292],[\"2021-03-13\",2130,288],[\"2021-03-14\",2129,284],[\"2021-03-15\",2128,280],[\"2021-03-16\",2128,277],[\"2021-03-17\",2127,274],[\"2021-03-18\",2126,271],[\"2021-03-19\",2125,268],[\"2021-03-20\",2125,265],[\"2021-03-21\",2124,262],[\"2021-03-22\",2123,259],[\"2021-03-23\",2123,257],[\"2021-03-24\",2122,255],[\"2021-03-25\",2121,253],[\"2021-03-26\",2121,250],[\"2021-03-27\",2120,249],[\"2021-03-28\",2119,246],[\"2021-03-29\",2119,245],[\"2021-03-30\",2118,243],[\"2021-03-31\",2117,241],[\"2021-04-01\",2116,240],[\"2021-04-02\",2116,238],[\"2021-04-03\",2115,237],[\"2021-04-04\",2114,235],[\"2021-04-05\",2114,234],[\"2021-04-06\",2113,233],[\"2021-04-07\",2112,231],[\"2021-04-08\",2112,230],[\"2021-04-09\",2111,229],[\"2021-04-10\",2110,228],[\"2021-04-11\",2109,227],[\"2021-04-12\",2109,226],[\"2021-04-13\",2108,225],[\"2021-04-14\",2107,224],[\"2021-04-15\",2107,223],[\"2021-04-16\",2106,223],[\"2021-04-17\",2105,222],[\"2021-04-18\",2105,221],[\"2021-04-19\",2104,221],[\"2021-04-20\",2103,220],[\"2021-04-21\",2103,219],[\"2021-04-22\",2102,218],[\"2021-04-23\",2101,218],[\"2021-04-24\",2100,218],[\"2021-04-25\",2100,217],[\"2021-04-26\",2099,216],[\"2021-04-27\",2098,216],[\"2021-04-28\",2098,216],[\"2021-04-29\",2097,215],[\"2021-04-30\",2096,215],[\"2021-05-01\",2096,214],[\"2021-05-02\",2095,214],[\"2021-05-03\",2094,214],[\"2021-05-04\",2094,213],[\"2021-05-05\",2093,213],[\"2021-05-06\",2092,213],[\"2021-05-07\",2092,213],[\"2021-05-08\",2091,212],[\"2021-05-09\",2090,212],[\"2021-05-10\",2089,212],[\"2021-05-11\",2089,212],[\"2021-05-12\",2088,212],[\"2021-05-13\",2087,211],[\"2021-05-14\",2087,211],[\"2021-05-15\",2086,211],[\"2021-05-16\",2085,211],[\"2021-05-17\",2085,211],[\"2021-05-18\",2084,211],[\"2021-05-19\",2083,210],[\"2021-05-20\",2083,210],[\"2021-05-21\",2082,210],[\"2021-05-22\",2081,210],[\"2021-05-23\",2081,210],[\"2021-05-24\",2080,210],[\"2021-05-25\",2079,210],[\"2021-05-26\",2078,210],[\"2021-05-27\",2078,209],[\"2021-05-28\",2077,210],[\"2021-05-29\",2076,209],[\"2021-05-30\",2076,209],[\"2021-05-31\",2075,209],[\"2021-06-01\",2074,210],[\"2021-06-02\",2074,209],[\"2021-06-03\",2073,209],[\"2021-06-04\",2072,209],[\"2021-06-05\",2072,209],[\"2021-06-06\",2071,209],[\"2021-06-07\",2070,209],[\"2021-06-08\",2070,209],[\"2021-06-09\",2069,209],[\"2021-06-10\",2068,209],[\"2021-06-11\",2068,209],[\"2021-06-12\",2067,209],[\"2021-06-13\",2066,209],[\"2021-06-14\",2066,209],[\"2021-06-15\",2065,209],[\"2021-06-16\",2064,209],[\"2021-06-17\",2064,209],[\"2021-06-18\",2063,209],[\"2021-06-19\",2062,209],[\"2021-06-20\",2061,209],[\"2021-06-21\",2061,209],[\"2021-06-22\",2060,209],[\"2021-06-23\",2059,209],[\"2021-06-24\",2059,209],[\"2021-06-25\",2058,209],[\"2021-06-26\",2057,209],[\"2021-06-27\",2057,208],[\"2021-06-28\",2056,209],[\"2021-06-29\",2055,209],[\"2021-06-30\",2055,209],[\"2021-07-01\",2054,208],[\"2021-07-02\",2053,209],[\"2021-07-03\",2053,208],[\"2021-07-04\",2052,208],[\"2021-07-05\",2051,208],[\"2021-07-06\",2051,208],[\"2021-07-07\",2050,208],[\"2021-07-08\",2049,208],[\"2021-07-09\",2049,208],[\"2021-07-10\",2048,208],[\"2021-07-11\",2047,208],[\"2021-07-12\",2047,208],[\"2021-07-13\",2046,208],[\"2021-07-14\",2045,208],[\"2021-07-15\",2045,208],[\"2021-07-16\",2044,208],[\"2021-07-17\",2043,208],[\"2021-07-18\",2043,208],[\"2021-07-19\",2042,207],[\"2021-07-20\",2041,208],[\"2021-07-21\",2041,207],[\"2021-07-22\",2040,207],[\"2021-07-23\",2039,207],[\"2021-07-24\",2039,207],[\"2021-07-25\",2038,207],[\"2021-07-26\",2037,207],[\"2021-07-27\",2037,207],[\"2021-07-28\",2036,207],[\"2021-07-29\",2035,207],[\"2021-07-30\",2035,206],[\"2021-07-31\",2034,206],[\"2021-08-01\",2033,206],[\"2021-08-02\",2033,206],[\"2021-08-03\",2032,206],[\"2021-08-04\",2031,206],[\"2021-08-05\",2031,206],[\"2021-08-06\",2030,206],[\"2021-08-07\",2029,206],[\"2021-08-08\",2029,205],[\"2021-08-09\",2028,205],[\"2021-08-10\",2027,205],[\"2021-08-11\",2027,205],[\"2021-08-12\",2026,205],[\"2021-08-13\",2025,205],[\"2021-08-14\",2025,204],[\"2021-08-15\",2024,204],[\"2021-08-16\",2023,204],[\"2021-08-17\",2023,204],[\"2021-08-18\",2022,204],[\"2021-08-19\",2021,204],[\"2021-08-20\",2021,203],[\"2021-08-21\",2020,203],[\"2021-08-22\",2019,203],[\"2021-08-23\",2019,203],[\"2021-08-24\",2018,202],[\"2021-08-25\",2017,203],[\"2021-08-26\",2017,202],[\"2021-08-27\",2016,202],[\"2021-08-28\",2015,202],[\"2021-08-29\",2015,201],[\"2021-08-30\",2014,201],[\"2021-08-31\",2013,201],[\"2021-09-01\",2013,201],[\"2021-09-02\",2012,200],[\"2021-09-03\",2011,201],[\"2021-09-04\",2011,200],[\"2021-09-05\",2010,200],[\"2021-09-06\",2009,200],[\"2021-09-07\",2009,199],[\"2021-09-08\",2008,199],[\"2021-09-09\",2007,199],[\"2021-09-10\",2007,198],[\"2021-09-11\",2006,198],[\"2021-09-12\",2005,198],[\"2021-09-13\",2005,198],[\"2021-09-14\",2004,197],[\"2021-09-15\",2003,197],[\"2021-09-16\",2003,197],[\"2021-09-17\",2002,197],[\"2021-09-18\",2001,196],[\"2021-09-19\",2001,196],[\"2021-09-20\",2000,195],[\"2021-09-21\",1999,195],[\"2021-09-22\",1999,195],[\"2021-09-23\",1998,194],[\"2021-09-24\",1997,194],[\"2021-09-25\",1997,194],[\"2021-09-26\",1996,194],[\"2021-09-27\",1995,193],[\"2021-09-28\",1995,193],[\"2021-09-29\",1994,192],[\"2021-09-30\",1993,192],[\"2021-10-01\",1993,192],[\"2021-10-02\",1992,191],[\"2021-10-03\",1992,191],[\"2021-10-04\",1991,191],[\"2021-10-05\",1990,190],[\"2021-10-06\",1990,190],[\"2021-10-07\",1989,190],[\"2021-10-08\",1988,189],[\"2021-10-09\",1988,189],[\"2021-10-10\",1987,188],[\"2021-10-11\",1986,188],[\"2021-10-12\",1986,188],[\"2021-10-13\",1985,187],[\"2021-10-14\",1984,187],[\"2021-10-15\",1984,186],[\"2021-10-16\",1983,186],[\"2021-10-17\",1982,186],[\"2021-10-18\",1982,185],[\"2021-10-19\",1981,185],[\"2021-10-20\",1980,184],[\"2021-10-21\",1980,184],[\"2021-10-22\",1979,184],[\"2021-10-23\",1978,183],[\"2021-10-24\",1978,182],[\"2021-10-25\",1977,182],[\"2021-10-26\",1977,182],[\"2021-10-27\",1976,181],[\"2021-10-28\",1975,181],[\"2021-10-29\",1975,181],[\"2021-10-30\",1974,180],[\"2021-10-31\",1973,179],[\"2021-11-01\",1973,179],[\"2021-11-02\",1972,178],[\"2021-11-03\",1971,178],[\"2021-11-04\",1971,178],[\"2021-11-05\",1970,177],[\"2021-11-06\",1969,177],[\"2021-11-07\",1969,176],[\"2021-11-08\",1968,176],[\"2021-11-09\",1967,175],[\"2021-11-10\",1967,175],[\"2021-11-11\",1966,174],[\"2021-11-12\",1965,174],[\"2021-11-13\",1965,173],[\"2021-11-14\",1964,173],[\"2021-11-15\",1964,172],[\"2021-11-16\",1963,172],[\"2021-11-17\",1962,171],[\"2021-11-18\",1962,171],[\"2021-11-19\",1961,170],[\"2021-11-20\",1960,170],[\"2021-11-21\",1960,169],[\"2021-11-22\",1959,169],[\"2021-11-23\",1958,168],[\"2021-11-24\",1958,168],[\"2021-11-25\",1957,167],[\"2021-11-26\",1956,167],[\"2021-11-27\",1956,166],[\"2021-11-28\",1955,166],[\"2021-11-29\",1955,165],[\"2021-11-30\",1954,165],[\"2021-12-01\",1953,164],[\"2021-12-02\",1953,164],[\"2021-12-03\",1952,163],[\"2021-12-04\",1951,163],[\"2021-12-05\",1951,162],[\"2021-12-06\",1950,162],[\"2021-12-07\",1949,161],[\"2021-12-08\",1949,160],[\"2021-12-09\",1948,160],[\"2021-12-10\",1947,159],[\"2021-12-11\",1947,159],[\"2021-12-12\",1946,158],[\"2021-12-13\",1946,158],[\"2021-12-14\",1945,157],[\"2021-12-15\",1944,157],[\"2021-12-16\",1944,156],[\"2021-12-17\",1943,156],[\"2021-12-18\",1942,155],[\"2021-12-19\",1942,155],[\"2021-12-20\",1941,154],[\"2021-12-21\",1940,153],[\"2021-12-22\",1940,153],[\"2021-12-23\",1939,152],[\"2021-12-24\",1939,152],[\"2021-12-25\",1938,151],[\"2021-12-26\",1937,151],[\"2021-12-27\",1937,150],[\"2021-12-28\",1936,150],[\"2021-12-29\",1935,149],[\"2021-12-30\",1935,149],[\"2021-12-31\",1934,148],[\"2022-01-01\",1933,147],[\"2022-01-02\",1933,147],[\"2022-01-03\",1932,146],[\"2022-01-04\",1932,146],[\"2022-01-05\",1931,145],[\"2022-01-06\",1930,145],[\"2022-01-07\",1930,144],[\"2022-01-08\",1929,144],[\"2022-01-09\",1928,143],[\"2022-01-10\",1928,142],[\"2022-01-11\",1927,142],[\"2022-01-12\",1926,141],[\"2022-01-13\",1926,141],[\"2022-01-14\",1925,140],[\"2022-01-15\",1925,140],[\"2022-01-16\",1924,139],[\"2022-01-17\",1923,139],[\"2022-01-18\",1923,138],[\"2022-01-19\",1922,138],[\"2022-01-20\",1921,137],[\"2022-01-21\",1921,136],[\"2022-01-22\",1920,136],[\"2022-01-23\",1920,135],[\"2022-01-24\",1919,135],[\"2022-01-25\",1918,134],[\"2022-01-26\",1918,134],[\"2022-01-27\",1917,133],[\"2022-01-28\",1916,133],[\"2022-01-29\",1916,132],[\"2022-01-30\",1915,131],[\"2022-01-31\",1914,131],[\"2022-02-01\",1914,130],[\"2022-02-02\",1913,130],[\"2022-02-03\",1913,129],[\"2022-02-04\",1912,129],[\"2022-02-05\",1911,128],[\"2022-02-06\",1911,127],[\"2022-02-07\",1910,127],[\"2022-02-08\",1909,126],[\"2022-02-09\",1909,126],[\"2022-02-10\",1908,125],[\"2022-02-11\",1908,125],[\"2022-02-12\",1907,124],[\"2022-02-13\",1906,124],[\"2022-02-14\",1906,123],[\"2022-02-15\",1905,123],[\"2022-02-16\",1904,122],[\"2022-02-17\",1904,121],[\"2022-02-18\",1903,121],[\"2022-02-19\",1903,120],[\"2022-02-20\",1902,120],[\"2022-02-21\",1901,119],[\"2022-02-22\",1901,119],[\"2022-02-23\",1900,118],[\"2022-02-24\",1899,118],[\"2022-02-25\",1899,117],[\"2022-02-26\",1898,117],[\"2022-02-27\",1898,116],[\"2022-02-28\",1897,116],[\"2022-03-01\",1896,115],[\"2022-03-02\",1896,114],[\"2022-03-03\",1895,114],[\"2022-03-04\",1894,113],[\"2022-03-05\",1894,113],[\"2022-03-06\",1893,112],[\"2022-03-07\",1893,112],[\"2022-03-08\",1892,111],[\"2022-03-09\",1891,111],[\"2022-03-10\",1891,110],[\"2022-03-11\",1890,110],[\"2022-03-12\",1889,109],[\"2022-03-13\",1889,109],[\"2022-03-14\",1888,108],[\"2022-03-15\",1888,108],[\"2022-03-16\",1887,107],[\"2022-03-17\",1886,107],[\"2022-03-18\",1886,106],[\"2022-03-19\",1885,106],[\"2022-03-20\",1884,105],[\"2022-03-21\",1884,105],[\"2022-03-22\",1883,104],[\"2022-03-23\",1883,104],[\"2022-03-24\",1882,103],[\"2022-03-25\",1881,103],[\"2022-03-26\",1881,102],[\"2022-03-27\",1880,102],[\"2022-03-28\",1880,101],[\"2022-03-29\",1879,101],[\"2022-03-30\",1878,100],[\"2022-03-31\",1878,100],[\"2022-04-01\",1877,99],[\"2022-04-02\",1876,99],[\"2022-04-03\",1876,98],[\"2022-04-04\",1875,98],[\"2022-04-05\",1875,97],[\"2022-04-06\",1874,97],[\"2022-04-07\",1873,96],[\"2022-04-08\",1873,96],[\"2022-04-09\",1872,95],[\"2022-04-10\",1872,95],[\"2022-04-11\",1871,94],[\"2022-04-12\",1870,94],[\"2022-04-13\",1870,93],[\"2022-04-14\",1869,93],[\"2022-04-15\",1868,92],[\"2022-04-16\",1868,92],[\"2022-04-17\",1867,92],[\"2022-04-18\",1866,91]\n          ],\n      columns: [\n          {\n              type:'text', width:'80', name:'date', title:'Дата',\n          },\n          {\n              type:'number', width:'110', name:'vol_pr', title:'Объем ПР (м3)',\n          },\n          {\n              type:'number', width:'180', name:'sod_me_pr', title:'Содержание в ПР (мг/л)',\n          },\n       ],\n  }\n\n  useEffect(() => {\n    setJexcel(jexcel(jexcelDom, jExcelTempDataOptions));\n  }, []);\n\n  const emptyJE = () => {\n    jE.setData([[],[],[],[],[],[],[],[],[],[],[],[],]);\n  }\n\n  const sendFact = () => {\n    dayjs.extend(customParseFormat);\n    setEbFact(jE.getData().map(row => {\n      return {\n        date: dayjs(row[0], dayjs(row[0], 'DD.MM.YYYY').isValid() ? 'DD.MM.YYYY' : 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        vol_pr: Number(row[1]),\n        sod_me_pr: Number(row[2]),\n      };\n    }));\n  }\n\n  return (\n    <div>\n      <div ref={(dom) => jexcelDom = dom} />\n      <br/>\n      <div>\n        <input type=\"button\" onClick={sendFact} value=\"Подключить факт\"/>\n        <input type=\"button\" onClick={emptyJE} value=\"Очистить таблицу\"/>\n      </div>\n      <p>Чтобы добавить свои фактические данные, очистите таблицу, выберите\n        первую ячейку и вставьте данные с помощью CTRL-V.\n      </p>\n    </div>\n  );\n};\nTableFact.propTypes = {\n  setEbFact: PropTypes.func.isRequired,\n}\n\nexport default TableFact;\n","import dayjs from 'dayjs'\nimport * as _ from 'lodash'\n\n//Расчет плановой кривой извлечения по формуле AVd\n//Пример параметров:\n//\"params\":{\"id\":2,\"me\":200,\"me_calc\":200,\"grm\":300000,\"skv_otk\":10,\"skv_otk_deb\":9.0,\"k_izvl\":0.85,\"koeff_year_um_deb\":0.9,\"koeff_year_um_skv\":0.98,\"sod_me_vr\":2.0,\"a\":2.0,\"v\":1.0,\"d\":0.2}\n//\"date_start\":\"2021-01-29\"\n//\"facts\":[{\"date\":\"2021-01-29\",\"vol_pr\":100,\"sod_me_pr\":180},]\n//\nconst calcPlan = (params, date_start, facts=[], step=\"day\") => {\n  const arrRez =[];\n  const dateStart = dayjs(date_start);\n  const C = params.me_calc * 1000 / params.grm; //gr_t_grm\n  const meEb = params.me * 1000; //Запасы блока в кг.\n  let counter = 0;\n  let skv_otk = params.skv_otk;\n  let skv_otk_deb = params.skv_otk_deb;\n  let vol_pr_nakop_old = 0.0;\n  let gr_t_grm_nakop_old = 0.0;\n  let me_pr_nakop_old = 0.0;\n  let me_final_nakop_old = 0.0;\n  \n  let me_pr_nakop_f_old = 0.0;\n  let me_final_nakop_f_old = 0.0;\n\n  let k_izvl = 0;\n  do {\n    const r = {\n      id: counter + 1,\n      date: dateStart.add(counter, step).format('YYYY-MM-DD'),\n      days: 1,\n      hours: 24,\n      vol_pr: 0,\n      vol_pr_nakop: 0,\n      jt: 0.0,\n      gr_t_grm_nakop: 0.0,\n      sod_me_pr: 0.0, //mg_l\n      me_pr: 0.0, //kg\n      me_pr_nakop: 0.0, //kg\n      me_vr: 0.0, //kg\n      me_final: 0.0, //kg\n      me_final_nakop: 0.0, //kg\n      k_izvl: 0.0,\n      //факт\n      vol_pr_f: null,\n      sod_me_pr_f: null, //mg_l\n      me_pr_f: null, //kg\n      me_pr_nakop_f: null, //kg\n      me_vr_f: null, //kg\n      me_final_f: null, //kg\n      me_final_nakop_f: null, //kg\n      k_izvl_f: null,\n    }\n    r.skv_otk = skv_otk;\n    r.skv_otk_deb = skv_otk_deb;\n    if (counter <= (facts.length - 1)) { \n      // если есть факт берем за основу фактические данные\n      r.date = facts[counter].date;\n      r.vol_pr = facts[counter].vol_pr;\n      r.vol_pr_f = facts[counter].vol_pr;\n      r.sod_me_pr_f = facts[counter].sod_me_pr;\n      // а так же считаем недостающий факт\n      r.me_pr_f = (r.sod_me_pr_f && r.sod_me_pr_f) ? r.sod_me_pr_f * r.vol_pr_f / 1000 : 0;\n      r.me_pr_nakop_f = me_pr_nakop_f_old + r.me_pr_f;\n      r.me_vr_f = params.sod_me_vr * r.vol_pr_f / 1000;\n      if (r.me_vr_f > r.me_pr_f) r.me_vr_f = r.me_pr_f;\n      r.me_final_f = r.me_pr_f - r.me_vr_f;\n      r.me_final_nakop_f = me_final_nakop_f_old + r.me_final_f;\n      r.k_izvl_f =  _.round(r.me_final_nakop_f / meEb, 4);\n    } else {\n      r.vol_pr = _.round(r.hours * r.skv_otk * r.skv_otk_deb);\n    }\n    if (r.vol_pr > 0) {\n      r.vol_pr_nakop = vol_pr_nakop_old + r.vol_pr;\n      r.jt = _.round(r.vol_pr_nakop / params.grm, 5);\n      //Расчет по AVd\n      const expParam = -(params.v * (r.jt - (params.d / r.jt)));\n      r.gr_t_grm_nakop = C / (1 + (params.a * Math.exp(expParam)));\n      r.sod_me_pr = _.round((r.gr_t_grm_nakop - gr_t_grm_nakop_old) * params.grm / (r.vol_pr / 1000), 3);\n      r.me_pr = r.sod_me_pr * r.vol_pr / 1000;\n      r.me_pr_nakop = me_pr_nakop_old + r.me_pr;\n      r.me_vr = params.sod_me_vr * r.vol_pr / 1000;\n      if (r.me_vr > r.me_pr) r.me_vr = r.me_pr;\n      r.me_final = r.me_pr - r.me_vr;\n      r.me_final_nakop = me_final_nakop_old + r.me_final;\n      r.k_izvl =  _.round(r.me_final_nakop / meEb, 4);\n      // Если больше заданного процента то обрезаем\n      if (r.k_izvl > params.k_izvl) {\n        const k_izvl_razn = r.k_izvl - params.k_izvl;\n        r.k_izvl = params.k_izvl;\n        r.me_final = (meEb * r.k_izvl) - me_final_nakop_old;\n        r.me_final_nakop = me_final_nakop_old + r.me_final;\n        r.vol_pr = _.round(r.vol_pr - r.vol_pr * k_izvl_razn);\n        r.vol_pr_nakop = vol_pr_nakop_old + r.vol_pr;\n        r.jt = _.round(r.vol_pr_nakop / params.grm, 3);\n        r.me_pr = r.sod_me_pr * r.vol_pr / 1000;\n        r.me_pr_nakop = me_pr_nakop_old + r.me_pr;\n        r.me_vr = r.me_pr - r.me_final;\n      }\n    } else {\n      r.vol_pr_nakop = vol_pr_nakop_old;\n      r.gr_t_grm_nakop = gr_t_grm_nakop_old;\n      r.me_pr_nakop = me_pr_nakop_old;\n      r.me_final_nakop = me_final_nakop_old;\n      r.k_izvl =  _.round(r.me_final_nakop / meEb, 4);\n    }\n    skv_otk = skv_otk - skv_otk * (1 - params.koeff_year_um_skv) / 365;\n    skv_otk_deb = skv_otk_deb - skv_otk_deb * (1 - params.koeff_year_um_deb) / 365;\n    vol_pr_nakop_old = r.vol_pr_nakop;\n    gr_t_grm_nakop_old = r.gr_t_grm_nakop;\n    me_pr_nakop_old = r.me_pr_nakop;\n    me_final_nakop_old = r.me_final_nakop;\n    me_pr_nakop_f_old = r.me_pr_nakop_f;\n    me_final_nakop_f_old = r.me_final_nakop_f;\n    k_izvl = r.k_izvl;\n    arrRez.push(r);\n    counter++;\n  } while (k_izvl < params.k_izvl && counter < 1200);\n  return arrRez;\n}\n\nexport default calcPlan;\n","import * as tf from '@tensorflow/tfjs';\n\nimport AbstractRegressionModel from \"./AbstractRegressionModel\";\n\nexport default class AvdRegressionModel extends AbstractRegressionModel {\n  /**\n  * Model initializing\n  *\n  * @param grmStart - стартовый грм (т)\n  * @param meStart - стартовые запасы (т)\n  * @param aStart -\n  * @param vStart -\n  * @param dStart -\n  */\n  constructor(\n    meStart,\n    grmStart,\n    aStart,\n    vStart,\n    dStart,\n    maxEpochPerTrainSession = 100,\n    learningRate = 0.1,\n    expectedLoss = 0.001\n  ) {\n    super();\n    this.meStart = meStart; // кг\n    this.grmStart = grmStart; // тонны\n    this.aStart = aStart;\n    this.vStart = vStart;\n    this.dStart = dStart;\n    this.maxEpochPerTrainSession = maxEpochPerTrainSession;\n    this.learningRate = learningRate;\n    this.expectedLoss = expectedLoss;\n\n    this.optimizerFunction = tf.train.sgd;\n    // this.optimizerFunction = tf.train.adam;\n\n    this.initModelVariables();\n  }\n\n  initModelVariables() {\n    this.a = tf.scalar(this.aStart).variable();\n    this.v = tf.scalar(this.vStart).variable();\n    this.d = tf.scalar(this.dStart).variable();\n    this.grm = tf.scalar(this.grmStart);\n    this.me = tf.scalar(this.meStart);\n    this.constOne = tf.scalar(1);\n    this.constTen = tf.scalar(10);\n  }\n\n  // Извлечение металла (г/т ГРМ) = С/(1+(А*еxp(-(V*(Ж:Т-(d/ Ж:Т)))))), где:\n  //  С – содержание металла в блоке (г/т ГРМ),\n  // Ж:Т – Растворы/ГРМ (м3/т)   берется на каждый месяц.\n  // A, V, d – поправочные коэффициенты, с помощью которых формируется кривая извлечения, где:\n  // А – влияет на высоту максимального пика кривой,\n  // V – влияет на время достижения максимального пика,\n  // d – влияет на продолжительность времени отработки.  \n  // Принцип этой формулы заключается в вычислении истощения исходных ресурсов, содержащихся в фиксированном объеме.\n\n  // сейчас функция считает накоппительное извл в кг\n  f = x => {\n      return tf.tidy(() => {\n        //денормализация x с последующим превращением в ЖТ\n        const jt = x.mul(this.inputMax.sub(this.inputMin)).add(this.inputMin).div(this.grm);\n\n        const C = this.me.mul(1000).div(this.grm);\n        const rExp = this.v.mul(jt.sub(this.d.div(jt))).mul(-1).exp();\n\n        const rez = C.div(this.constOne.add(this.a.mul(rExp))).mul(this.grm).div(1000);\n\n        const normalize = rez.sub(this.outputMin).div(this.outputMax.sub(this.outputMin));;\n\n        return normalize;\n      });\n  }\n\n\n  /**\n  * Predict value basing on trained model\n  * @return Array({x: integer, y: integer}) - predicted values \n  * associated with input\n  */\n  predict(inputRaw, outputRaw) {\n    const input = tf.tensor1d(inputRaw);\n\n    const output = this.f(input).arraySync();\n    return output.map((k_izvl_calc, i) => \n      ({ date: i, vol: inputRaw[i], k_izvl_et: outputRaw[i], k_izvl_calc }));\n  }\n\n  predictAvd() {\n    const a = this.a.dataSync()[0];\n    const v = this.v.dataSync()[0];\n    const d = this.d.dataSync()[0];\n    const grm = this.grm.dataSync()[0];\n    const me = this.me.dataSync()[0];\n    return ({ a, v, d, grm, me });\n  }\n\n}\n","import * as tf from '@tensorflow/tfjs';\n\nexport default class AbstractRegressionModel {\n  /**\n  * Model initializing\n  *\n  * @param learningRate -\n  * @param expectedLoss - optional, stop tarining model when loss reach \n  * set expected loss\n  */\n  constructor(\n    optimizerFunction = tf.train.sgd,\n    maxEpochPerTrainSession = 100,\n    learningRate = 0.1,\n    expectedLoss = 0.001\n  ) {\n    this.optimizerFunction = optimizerFunction;\n    this.expectedLoss = expectedLoss;\n    this.learningRate = learningRate;\n    this.maxEpochPerTrainSession = maxEpochPerTrainSession;\n\n    // Разкоментировать, если не вызывается в дочернем конструкторе\n    //this.initModelVariables();\n\n    this.trainSession = 0;\n    this.epochNumber = 0;\n    this.history = [];\n  }\n\n\n  initModelVariables() {\n    throw Error('Model variables should be defined');\n  }\n\n  f() {\n    throw Error('Model should be defined');\n  }\n\n\n  /**\n  * Calculate loss function as root-mean-square devation\n  *\n  * @param predictedValue - tensor1d - predicted values of calculated model\n  * @param realValue - tensor1d - real value of experimental points\n  */\n  loss = (predictedValue, realValue) => {\n    const loss = predictedValue.sub(realValue).square().mean().sqrt();\n    this.lossVal = loss.dataSync()[0];\n    return loss;\n  }\n\n  /*\n  * Train model until explicitly stop process via invocation of stop method\n  * or loss achieve neceassary accuracy, or train achieve max epoch value\n  *\n  * @param x - array of x coordinates\n  * @param y - array of y coordinates\n  * @param callback - optional, invoked after each training step\n  */\n  async train(inputRaw, outputRaw, callback) {\n    const currentTrainSession = ++this.trainSession;\n    this.lossVal = Number.POSITIVE_INFINITY;\n    this.epochNumber = 0;\n    this.history = [];\n\n    const inputTmp = tf.tensor1d(inputRaw);\n    const outputTmp = tf.tensor1d(outputRaw);\n\n    this.inputMax = inputTmp.max(); // tf.scalar(this.grmStart * 5);\n    this.inputMin = tf.scalar(0); //outputTmp.min();\n    this.outputMax = outputTmp.max(); //this.me;\n    this.outputMin = tf.scalar(0); //outputTmp.min();\n    // нормализация\n    const input = inputTmp.sub(this.inputMin).div(this.inputMax.sub(this.inputMin));\n    const output = outputTmp.sub(this.outputMin).div(this.outputMax.sub(this.outputMin));\n\n\n    const optimizer = this.optimizerFunction(this.learningRate);\n\n    while (\n      currentTrainSession === this.trainSession\n      && this.lossVal > this.expectedLoss\n      && this.epochNumber <= this.maxEpochPerTrainSession\n      ) {\n      optimizer.minimize(() => this.loss(this.f(input), output));\n      this.history = [...this.history, {\n        epoch: this.epochNumber,\n        loss: this.lossVal\n      }];\n      callback && callback();\n      this.epochNumber++;\n      await tf.nextFrame();\n    }\n\n    // ненужные тензоры нужно обязательно удалять\n    input.dispose();\n    inputTmp.dispose();\n    outputTmp.dispose();\n  }\n\n  stop() {\n    this.trainSession++;\n  }\n\n  /**\n  * Predict value basing on trained model\n  * @return Array({x: integer, y: integer}) - predicted values \n  * associated with input\n  *\n  */\n  predict(inputRaw) {\n    const input = tf.tensor1d(inputRaw);\n\n    const output = this.f(input).arraySync();\n    return output.map((y, i) => ({ x: inputRaw[i], y }));\n  }\n}\n","import * as _ from 'lodash'\n\nimport AvdRegressionModel from './AvdRegressionModel';\n\nlet modelAvd = null;\n\nasync function findAvd(ebParam, ebFact, callbackRez, callbackWorkPrc) {\n  const params = ebParam;\n  \n  const prepFact = prepareFact(params, ebFact);\n\n  const input = prepFact.map(({ vol_pr_nakop }) => vol_pr_nakop);\n  const output = prepFact.map(({ me_final_nakop }) => me_final_nakop); \n\n  const iterations = 3000;\n  modelAvd = new AvdRegressionModel(\n    params.me*1000,params.grm,params.a,params.v,params.d,iterations,0.1,0.001);\n\n  const prcStep = iterations / 100;\n  modelAvd.train(input, output, () => {\n    if (modelAvd.epochNumber % prcStep === 0) {\n      callbackWorkPrc(parseInt(modelAvd.epochNumber / modelAvd.maxEpochPerTrainSession * 100));\n    }\n  }).then(() => {\n    callbackWorkPrc(0);\n    const newAvd = modelAvd.predictAvd();\n    callbackRez({\n      a: _.round(newAvd.a,4),\n      v: _.round(newAvd.v,4),\n      d: _.round(newAvd.d,4),\n    });\n  });\n}\n\nfunction stopFindAvd() {\n  if (modelAvd) {\n    modelAvd.stop();\n  }\n}\n\nfunction prepareFact(params, ebFact) {\n  let rezArr = [];\n  let vol_pr_nakop = 0;\n  let me_final_nakop = 0;\n  for (let i = 0; i < ebFact.length; i++) {\n    vol_pr_nakop += ebFact[i].vol_pr;\n    me_final_nakop += (ebFact[i].vol_pr * ebFact[i].sod_me_pr / 1000);\n    rezArr.push({ vol_pr_nakop, me_final_nakop });\n  }\n  return rezArr;\n}\n\nexport { findAvd, stopFindAvd };\n","import React, {useRef, useLayoutEffect, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ComposedChart, LineChart, Line, Area, XAxis, YAxis, CartesianGrid, Tooltip,\n} from 'recharts';\nimport BaseTable, { Column } from 'react-base-table'\nimport 'react-base-table/styles.css'\n\nimport TableFact from './Eblock_fact_table';\nimport calcPlan from './calc/calc_plan';\nimport { findAvd, stopFindAvd } from './calc/find_avd';\n\nimport './Eblock.css';\n\n\n\nconst Eblock = ({ nameEb, paramEb }) => {\n  const [runPlanRecalc, setRunPlanRecalc] = useState(true);\n  const [ebParam, setEbParam] = useState(paramEb);\n  const [ebPlanFact, setEbPlanFact] = useState([]);\n  const [ebFact, setEbFact] = useState([]);\n  const [prcCalcAvd, setPrcCalcAvd] = useState(0);\n\n  const runFindAvd = () => {\n    if (ebFact.length > 0) {\n      findAvd(ebParam, ebFact, setRezOfFindAvd, setPrcCalcAvd);\n    } else {\n      alert(\"Для подбора AVd заполните таблицу факта и нажмите кнопку <Вывести факт на график>!\");\n    }\n  }\n\n  const setRezOfFindAvd = newAvd => {\n    setEbParam({\n      ...ebParam,\n      'a': newAvd.a,\n      'v': newAvd.v,\n      'd': newAvd.d,\n    });\n    setRunPlanRecalc(!runPlanRecalc);\n  }\n\n  const handleInputNumChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    setEbParam({\n      ...ebParam,\n      [name]: Number(value)\n    });\n  }\n\n  const handleInputDateChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    setEbParam({\n      ...ebParam,\n      [name]: value\n    });\n  }\n\n  const onUpDown = (name, addVal) => {\n    let val = ebParam[name] + addVal;\n    val = Number(val.toFixed(5).replace(/0*$/,\"\").replace(/\\.$/,\".0\"));\n    setEbParam({\n      ...ebParam,\n      [name]: val\n    });\n    setRunPlanRecalc(!runPlanRecalc);\n  }\n\n\n  useEffect(() => {\n    const arr = calcPlan(ebParam, ebParam.date_start, ebFact)\n    setEbPlanFact(arr);\n  }, [runPlanRecalc, ebFact]);\n\n  return (\n    <div className=\"content-flex\">\n      <div className=\"content-header\">\n        <h3>Прогнозирование посуточной добычи.</h3>\n        <Charts data={ebPlanFact}/>\n      </div>\n      <div className=\"content-body\">\n        <div className=\"btnUpDownGroup\">\n          <label>A:</label>\n          <input name=\"a\" type=\"number\" value={ebParam.a} onChange={handleInputNumChange} \n            onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n          <button type=\"button\" onClick={() => onUpDown(\"a\",-0.1)}>-</button>\n          <button type=\"button\" onClick={() => onUpDown(\"a\",0.1)}>+</button>\n        </div>\n        <div className=\"btnUpDownGroup\">\n          <label>V:</label>\n          <input name=\"v\" type=\"number\" value={ebParam.v} onChange={handleInputNumChange}\n            onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n          <button type=\"button\" onClick={() => onUpDown(\"v\",-0.1)}>-</button>\n          <button type=\"button\" onClick={() => onUpDown(\"v\",0.1)}>+</button>\n        </div>\n        <div className=\"btnUpDownGroup\">\n          <label>d:</label>\n          <input name=\"d\" type=\"number\" value={ebParam.d} onChange={handleInputNumChange}\n            onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n          <button type=\"button\" onClick={() => onUpDown(\"d\",-0.01)}>-</button>\n          <button type=\"button\" onClick={() => onUpDown(\"d\",0.01)}>+</button>\n        </div>\n        <span hidden={prcCalcAvd !== 0}>\n          <button type=\"button\" onClick={() => runFindAvd()}>Подобрать AVd</button>\n        </span>\n        <span hidden={prcCalcAvd === 0}>\n          <button type=\"button\" onClick={() => stopFindAvd()}>Прервать подбор AVd</button>\n        </span>\n        <span hidden={prcCalcAvd === 0}>\n          <div className=\"progressbar\">\n            <div style={{width: prcCalcAvd.toString()+'%'}}>{prcCalcAvd}%</div>\n          </div>\n        </span>\n      </div>\n      <div className=\"content-h100\">\n        <div className=\"content-layout\">\n          <div className=\"content-sidebar\">\n            <label>Запасы т</label>\n            <input name=\"me\" type=\"number\" step=\"1\" value={ebParam.me}\n              onChange={handleInputNumChange} onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n            <label>ГРМ т</label>\n            <input name=\"grm\" type=\"number\" step=\"1\" value={ebParam.grm}\n              onChange={handleInputNumChange} onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n            <label>Отк.скв.шт</label>\n            <input name=\"skv_otk\" type=\"number\" step=\"1\" value={ebParam.skv_otk}\n              onChange={handleInputNumChange} onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n            <label>Дебит отк.скв м3/ч</label>\n            <input name=\"skv_otk_deb\" type=\"number\" step=\"0.1\" value={ebParam.skv_otk_deb}\n              onChange={handleInputNumChange} onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n            <label>Плановый Коефф.извл.</label>\n            <input name=\"k_izvl\" type=\"number\" step=\"0.1\" value={ebParam.k_izvl}\n              onChange={handleInputNumChange} onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n            <label>Ежегодн.коефф.уменьшения дебита.</label>\n            <input name=\"koeff_year_um_deb\" type=\"number\" step=\"0.1\" value={ebParam.koeff_year_um_deb}\n              onChange={handleInputNumChange} onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n            <label>Ежегодн.коефф.уменьш.кол-ва скв.</label>\n            <input name=\"koeff_year_um_skv\" type=\"number\" step=\"0.1\" value={ebParam.koeff_year_um_skv}\n              onChange={handleInputNumChange} onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n            <label>Средн.содерж.Me в ВР (мг/л)</label>\n            <input name=\"sod_me_vr\" type=\"number\" step=\"0.1\" value={ebParam.sod_me_vr}\n              onChange={handleInputNumChange} onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n            <label>Дата запуска блока</label>\n            <input name=\"date_start\" type=\"date\" value={ebParam.date_start}\n              onChange={handleInputDateChange} onBlur={()=>setRunPlanRecalc(!runPlanRecalc)}/>\n          </div>\n          <div className=\"content-body\">\n            <div className=\"content-row\">\n              <div className=\"content-el\">\n                План:\n                <BaseTable data={ebPlanFact} width={500} height={400} headerHeight={30} rowHeight={25}>\n                  <Column key=\"id\" dataKey=\"id\" title=\"№ пп\" width={60} />\n                  <Column key=\"date\" dataKey=\"date\" title=\"Дата\"  width={100} />\n                  <Column key=\"jt\" dataKey=\"jt\" title=\"Ж/Т\"  width={100} />\n                  <Column key=\"vol_pr\" dataKey=\"vol_pr\" title=\"Объем ПР (м3)\"  width={80} />\n                  <Column key=\"sod_me_pr\" dataKey=\"sod_me_pr\" title=\"Содержание в ПР (мг/л)\"  width={100} />\n                  <Column key=\"k_izvl\" dataKey=\"k_izvl\" title=\"К.извл.\" width={80} />\n                </BaseTable>\n              </div>\n              <div className=\"content-el\">\n                Факт:\n                <TableFact setEbFact={setEbFact}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nEblock.propTypes = {\n  nameEb: PropTypes.string.isRequired,\n  paramEb: PropTypes.object.isRequired,\n  runEb: PropTypes.object.isRequired,\n}\n\n\nconst Charts = ({ data }) => {\n  const targetRef = useRef();\n  const [size, setSize] = useState({ width:0, height: 0 });\n\n  useLayoutEffect(() => {\n    if (targetRef.current) {\n      setSize({\n        width: targetRef.current.offsetWidth,\n        height: targetRef.current.offsetHeight\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"content-charts\" ref={targetRef}>\n      {/* Содержание и К.извл */}\n      <LineChart\n        width={size.width - 40}\n        height={350}\n        data={data}\n        margin={{ top: 5, right: 10, left: 10, bottom: 0 }}\n      >\n        <XAxis dataKey=\"date\" />\n        <YAxis \n          dataKey=\"sod_me_pr\"\n          label={{ value: 'Сод.Ме в ПР (мг/л)', angle: -90, position: 'insideLeft' }}\n          yAxisId={0}\n        />\n        <YAxis \n          dataKey=\"k_izvl\" \n          label={{ value: 'К.извл', angle: -90, position: 'insideRight' }}\n          yAxisId={1} orientation=\"right\"\n        />\n        <Tooltip isAnimationActive={false}/>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        {/* <CartesianGrid stroke=\"#f5f5f5\" /> */}\n        <Line \n          type=\"linear\" dataKey=\"sod_me_pr\" title=\"Сод.Ме план\"\n          stroke=\"blue\" yAxisId={0} \n          isAnimationActive={false} dot={false}\n        />\n        <Line \n          type=\"linear\" dataKey=\"k_izvl\" title=\"К.извл план\"\n          stroke=\"purple\" yAxisId={1} \n          isAnimationActive={false} dot={false}\n        />\n        <Line \n          type=\"linear\" dataKey=\"k_izvl_f\" title=\"К.извл факт\"\n          stroke=\"#387908\" yAxisId={1} \n          isAnimationActive={false} dot={false}\n        />\n        <Line \n          type=\"linear\" dataKey=\"sod_me_pr_f\" title=\"Сод.Ме факт\"\n          stroke=\"red\" yAxisId={0} \n          isAnimationActive={false} dot={false}\n        />\n      </LineChart>\n      {/* Обемм ПР        */}\n      <ComposedChart\n        width={size.width - 40}\n        height={100}\n        data={data}\n        margin={{ top: 0, right: 10, left: 10, bottom: 5 }}\n      >\n        <defs>\n          <linearGradient id=\"colorP\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n          </linearGradient>\n          <linearGradient id=\"colorF\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n          </linearGradient>\n        </defs>\n        <XAxis dataKey=\"date\" hide=\"true\"/>\n        <YAxis \n          dataKey=\"vol_pr\"\n          label={{ value: 'ПР (м3)', angle: -90, position: 'insideLeft' }}\n          yAxisId={0}\n        />\n        <YAxis \n          dataKey=\"vol_pr\"\n          label={{ value: 'ПР (м3)', angle: -90, position: 'insideRight' }}\n          yAxisId={1} orientation=\"right\"\n        />\n        <Tooltip isAnimationActive={false}/>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Area \n          type=\"linear\" dataKey=\"vol_pr\" yAxisId={0}\n          stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorP)\" \n          isAnimationActive={false} dot={false}\n        />\n        <Area \n          type=\"linear\" dataKey=\"vol_pr_f\" yAxisId={0} \n          stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorF)\"\n          isAnimationActive={false} dot={false}\n        />\n      </ComposedChart>   \n    </div>\n  );\n}\nCharts.propTypes = {\n  data: PropTypes.array.isRequired,\n}\n\nexport default Eblock;\n","import React from 'react';\n\nimport Eblock from './Eblock';\n\n// synthetic test data for demonstration\nconst eblockData = {\n  name: \"Test\",\n  params: [{date_start: \"2021-01-29\",\"me\":200,\"me_calc\":200,\"grm\":300000,\"grm_calc\":300000,\"skv_otk\":10,\"skv_otk_deb\":9.0,\"k_izvl\":0.85,\"koeff_year_um_deb\":0.9,\"koeff_year_um_skv\":0.98,\"sod_me_vr\":2.0,\"a\":2.0,\"v\":1.0,\"d\":0.2}],\n}\n\nfunction App() {\n  return (\n    <Eblock nameEb={eblockData.name} paramEb={eblockData.params[0]}/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}